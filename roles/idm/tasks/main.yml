---


- set_fact:
    user_status: '\{\{.metadata.name\}\}'
- set_fact:
    test_user: admin100

- shell: |
    {{ openshift_cli }} get users {{ test_user }} -o template --template={{ user_status }}
  register: resource_status
  ignore_errors: true

- block:
  # As per: https://docs.openshift.com/container-platform/4.2/authentication/identity_providers/configuring-htpasswd-identity-provider.html
   
  # Alternative:
  #   $ oc extract secret/htpass-secret -n openshift-config --to /tmp
  #   $ cat {{ resources_base_dir}}/idm/users_and_admins.htpasswd >> /tmp/htpasswd
  #   $ oc set data secret/htpass-secret --from-file htpasswd=/tmp/htpasswd -n openshift-config 
  #
  # Wait until operator in "openshift-authentication-operator" detects change and restarts pods in "openshift-authentication"
  #
  # Benefit:  Would not need to modify default Oauth provider
  
  - name: Augment OAuth identity provider with a additional admin users for control plane
    shell: |
      oc create secret generic idm-admins-secret --from-file=htpasswd={{ resources_base_dir }}/idm/users_and_admins.htpasswd -n openshift-config 
      oc apply -f {{ resources_base_dir }}/idm/oauth.yml -n openshift-config

  - name: give cluster admin rights to cluster-admin user
    shell: |
      oc adm policy add-cluster-role-to-user cluster-admin cluster-admin

  when: >
    resource_status.stdout is not defined or
    resource_status.stdout is none or
    resource_status.stdout != "{{ test_user }}"
